
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  FACULTY
  ADMIN
}

enum ItemStatus {
  ACTIVE
  CLAIMED
  RETURNED
  EXPIRED
}

enum ItemType {
  LOST
  FOUND
}

enum ClaimStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  studentId   String?  @unique
  phone       String?
  role        UserRole @default(STUDENT)
  department  String?
  isVerified  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  items       Item[]
  claims      Claim[]
  messages    Message[]
  
  @@map("users")
}

model Category {
  id          String @id @default(cuid())
  name        String @unique
  description String?
  icon        String?
  items       Item[]
  
  @@map("categories")
}
model Item {
  id          String     @id @default(cuid())
  title       String
  description String
  type        ItemType
  status      ItemStatus @default(ACTIVE)
  location    String
  dateFound   DateTime?
  dateLost    DateTime?
  images      String[]
  tags        String[]
  
  // Foreign keys
  userId      String
  categoryId  String
  
  // Relations
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category   @relation(fields: [categoryId], references: [id])
  claims      Claim[]
  
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  @@map("items")
}

model Claim {
  id          String      @id @default(cuid())
  description String
  status      ClaimStatus @default(PENDING)
  proofImages String[]
  
  // Foreign keys
  itemId      String
  claimantId  String
  
  // Relations
  item        Item        @relation(fields: [itemId], references: [id], onDelete: Cascade)
  claimant    User        @relation(fields: [claimantId], references: [id], onDelete: Cascade)
  messages    Message[]
  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  @@map("claims")
}

model Message {
  id        String   @id @default(cuid())
  content   String
  
  // Foreign keys
  senderId  String
  claimId   String
  
  // Relations
  sender    User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
  claim     Claim    @relation(fields: [claimId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  
  @@map("messages")
}

model Notification {
  id        String   @id @default(cuid())
  title     String
  message   String
  isRead    Boolean  @default(false)
  userId    String
  
  createdAt DateTime @default(now())
  
  @@map("notifications")
}
